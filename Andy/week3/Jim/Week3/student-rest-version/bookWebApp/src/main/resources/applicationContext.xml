<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:sec="http://www.springframework.org/schema/security"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
          http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
">
    <context:property-placeholder location="file:/auction/bitbay.properties"/> 
    <!-- Scans within the base package of the application for Spring annotations to configure as beans -->
    <context:component-scan base-package="edu.wctc.web.demo.bookwebapp">
        <context:exclude-filter type="regex" expression="edu\.wctc\.web\.demo\.bookwebapp\.repository.*" />
    </context:component-scan>
    <context:annotation-config/>
    
    <jpa:repositories base-package="edu.wctc.web.demo.bookwebapp.repository" />
    
    <!-- Begin Spring Security Config -->

    <!-- Don't SSL encrypt static resources -->
    <sec:http pattern="/resources/**" security="none"/>
    <sec:http auto-config="true" use-expressions="true" disable-url-rewriting="true">
            
        <!-- On Glassfish, dev ports are 8080 and 8181, whereas on 
        production its 80 and 443. However, current configuration of 
        novotny.byteshop.net is to use dev ports with auto redirects configured
        on server machine  -->
        <sec:port-mappings>
            <sec:port-mapping http="8080" https="8181"/>
        </sec:port-mappings>
        
        <sec:access-denied-handler error-page="/loginerror.jsp" />

        <sec:intercept-url pattern="/login.jsp" 
                           access="isAnonymous()" requires-channel="https"/>
        
        <sec:intercept-url pattern="/loginerror.jsp" 
                           access="isAnonymous()" requires-channel="https"/>

        <sec:intercept-url 
            pattern="/**" 
            access="hasAnyRole('ROLE_USER', 'ROLE_MGR')" requires-channel="https" />
    
        <!-- Use custom form for login -->
        <sec:form-login 
            username-parameter="j_username" 
	    password-parameter="j_password"
            login-processing-url="/j_spring_security_check"
            login-page="/login.jsp" 
            default-target-url="/index.html"
            always-use-default-target="true"
            authentication-failure-url="/loginerror.jsp"/>
            
        <sec:logout logout-url="/j_spring_security_logout" 
                    invalidate-session="true" 
                    delete-cookies="JSESSIONID"
                    logout-success-url="/login.jsp" />
        
        <sec:csrf disabled="true"/>
        <!-- end Spring Security Config -->

    </sec:http>
    
    <!--
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
    -->

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider>
            <sec:password-encoder ref="encoderBean">
                <sec:salt-source user-property="username"/>
            </sec:password-encoder>
            <sec:jdbc-user-service data-source-ref="dataSource" /> 

        </sec:authentication-provider>
    </sec:authentication-manager>
    
    <bean id="encoderBean" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <constructor-arg value="512" />
        <property name="iterations" value="1024"/>
    </bean>
        
    <!-- (Optional) Automatically receives and logs AuthenticationEvent messages -->
    <bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>
     
    <!-- Server managed connection pool accessed via JNDI -->
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/book"/>
  
    <!-- Spring managed EntityManager configuration -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="book_PU"/>
        <property name="packagesToScan" value="edu.wctc.web.demo.bookwebapp.entity"/>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false" />
                <property name="generateDdl" value="false" />
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
    </bean>

    <!-- Spring managed transactions -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven />   
    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="port" value="587"/>
        <property name="javaMailProperties">
            <props>
                <!-- Use SMTP transport protocol -->
                <prop key="mail.transport.protocol">smtp</prop>
                <!-- Use SMTP-AUTH to authenticate to SMTP server -->
                <prop key="mail.smtp.auth">true</prop>
                <!-- Use TLS to encrypt communication with SMTP server -->
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>
    
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <!-- if using Gmail, the from must be the address of the account holder -->
        <property name="from" value="${mail.username}"/>
	<!-- replace the value text with your own -->
        <property name="subject" value="Web App Registration - One More Step Required"/>
    </bean>
</beans>